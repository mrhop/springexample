/**
 * This class is generated by jOOQ
 */
package com.hopever.springexample.db.jooq.tables.daos;


import com.hopever.springexample.db.jooq.tables.Test;
import com.hopever.springexample.db.jooq.tables.records.TestRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestDao extends DAOImpl<TestRecord, com.hopever.springexample.db.jooq.tables.pojos.Test, Long> {

	/**
	 * Create a new TestDao without any configuration
	 */
	public TestDao() {
		super(Test.TEST, com.hopever.springexample.db.jooq.tables.pojos.Test.class);
	}

	/**
	 * Create a new TestDao with an attached configuration
	 */
	public TestDao(Configuration configuration) {
		super(Test.TEST, com.hopever.springexample.db.jooq.tables.pojos.Test.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Long getId(com.hopever.springexample.db.jooq.tables.pojos.Test object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>ID IN (values)</code>
	 */
	public List<com.hopever.springexample.db.jooq.tables.pojos.Test> fetchById(Long... values) {
		return fetch(Test.TEST.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>ID = value</code>
	 */
	public com.hopever.springexample.db.jooq.tables.pojos.Test fetchOneById(Long value) {
		return fetchOne(Test.TEST.ID, value);
	}

	/**
	 * Fetch records that have <code>NAME IN (values)</code>
	 */
	public List<com.hopever.springexample.db.jooq.tables.pojos.Test> fetchByName(String... values) {
		return fetch(Test.TEST.NAME, values);
	}
}
