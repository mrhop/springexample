https://www.owasp.org/index.php/Category:Vulnerability [top ten list of web application vulnerabilities ]


http://docs.spring.io/spring-security/site/docs/4.0.3.RELEASE/reference/htmlsingle/ [SECURITY]
Integrate with the following Servlet API methods

git rm  --cached settings.gradle
git commit -m "remove no need"
git push


now :Part V. Spring Boot Actuator: Production-ready features of spring boot
some tech：mongodb/redis/rabbitmq/activemq/mqtt/zookeeper/gemfire/other cloud database





cms
1.分块（位置）固定的位置
2.自定义位置/位置的修改【需要看看css的布局】
2.内容作为重点（核心可更新内容）
3.单独可放置部分（导航，底部导航，header，新闻，rss，分块简单内容，投票系统，广告块）
4.自定义块创建（提供json接口和对象接口）
4.模板（将位置和内容有机的结合在一起）
5.自定义模板创建（）
6.模板修改
7.安全
8.日志收集
9.文件系统

采用json+http的数据传输格式


安全-oauth2单独项目
推送项目（用于用户信息处理后的推送）
内容管理系统单独一个项目
文件管理系统单独一个项目


crm系统（本质的学习）

用户操作项目+安全oauth2项目+工作流处理项目（Pub/Sub）+推送项目（用户处理推送+安全推送+mqtt）+用户交流(开源网云)+文件管理系统（sftp服务器）

统一配置文件，使用zookeeper


核心还在于数据建模

需要进一步学习【amazon 云】，学习架构infoq



oauth2--------------------------------------------------------


oauth2 auth server（authen and author）（同时根据oauth2 auth plugins/resource server给出特定的授权选项）

oauth2 auth plugins(changable)【mq client receive from the cms or crm system】 plugin 控制大线条（大的权限阶梯），resource拆分小线条

oauth2 basic resource server(basic resource -- file/cms[内容升华为资源来进行管控])

oauth2 auth management system(basic system)（核心的管控页面，管控基本的权限分组和最高级别的权限分组，以及给plugins指定的权限分组指定资源以及操作行为）。


